/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class minimardi_Move */

#ifndef _Included_minimardi_Move
#define _Included_minimardi_Move
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     minimardi_Move
 * Method:    setMoveCastle
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_setMoveCastle
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    newMoveWithProm
 * Signature: (IIC)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_newMoveWithProm
  (JNIEnv *, jclass, jint, jint, jchar);

/*
 * Class:     minimardi_Move
 * Method:    newMoveWithPassant
 * Signature: (IIC)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_newMoveWithPassant
  (JNIEnv *, jclass, jint, jint, jchar);

/*
 * Class:     minimardi_Move
 * Method:    newMoveAll
 * Signature: (IICCII)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_newMoveAll
  (JNIEnv *, jclass, jint, jint, jchar, jchar, jint, jint);

/*
 * Class:     minimardi_Move
 * Method:    printMoveAlg
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_minimardi_Move_printMoveAlg
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    printMove
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_minimardi_Move_printMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    moveToAlg
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_minimardi_Move_moveToAlg
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    algToMove
 * Signature: (Ljava/lang/String;C)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_algToMove
  (JNIEnv *, jclass, jstring, jchar);

/*
 * Class:     minimardi_Move
 * Method:    debugLegalMove
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_debugLegalMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    getPromPiece
 * Signature: (I)C
 */
JNIEXPORT jchar JNICALL Java_minimardi_Move_getPromPiece
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    getCapPiece
 * Signature: (I)C
 */
JNIEXPORT jchar JNICALL Java_minimardi_Move_getCapPiece
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    getSrc
 * Signature: (I)C
 */
JNIEXPORT jchar JNICALL Java_minimardi_Move_getSrc
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    getDest
 * Signature: (I)C
 */
JNIEXPORT jchar JNICALL Java_minimardi_Move_getDest
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    isCastleMove
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_minimardi_Move_isCastleMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    isPassantMove
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_minimardi_Move_isPassantMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    isPromMove
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_minimardi_Move_isPromMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    isCaptureMove
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_minimardi_Move_isCaptureMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    legaMove
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_minimardi_Move_legaMove
  (JNIEnv *, jclass, jint);

/*
 * Class:     minimardi_Move
 * Method:    newMove
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_newMove
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     minimardi_Move
 * Method:    newMoveWithCap
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_minimardi_Move_newMoveWithCap
  (JNIEnv *, jclass, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
